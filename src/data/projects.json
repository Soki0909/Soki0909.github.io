[
  {
    "id": 1,
    "title": "Sleep Buster - ハッカソン最優秀賞作品",
    "description": "Hackit 2025 Grand Prize Winner 🏆 - みんなの朝を『つなぐ』アラームアプリ（賞金5万円）",
    "longDescription": "Sleep Busterは、Hackit 2025で最優秀賞（賞金5万円）を受賞した革新的なアラームアプリです。従来の目覚ましアプリとは一線を画す「物理的なお仕置き機能」と「WebRTC映像通信」を組み合わせ、友人同士で楽しく確実に起床できるシステムを実現しました。\n\n🏆 大会詳細：\n• 期間：2025年8月2日〜4日（3日間集中開発）\n• 参加：全8チームが競う学内ハッカソン\n• 賞金：最優秀賞5万円を獲得\n• 会場：金沢工業大学\n\n👥 チーム構成と経験レベル：\n• 5名チーム（3年生3名、1年生2名）\n• 5名中3名がAndroidアプリ初開発\n• 残り2名も授業でJavaを触った程度\n• 全員がハッカソン初参加という挑戦的な構成\n\n🎯 革新的なコンセプト「みんなの朝を『つなぐ』アプリ」：\n従来の目覚ましアプリは一人用でしたが、Sleep Busterは「友人同士で起床を支援し合う」という新しい体験を提供。設定時間に起きられない人を、友達が遠隔操作でロボット「バスタ君」を動かして物理的に起こすという、ユニークで確実な起床システムです。\n\n🔧 私の担当・貢献：\n• WebRTC映像通信システムの設計・実装\n• SkyWay SDKを活用したP2P映像配信機能\n• 1年生とのペアプログラミングによるルーム機能開発\n• Firebase Firestoreを使ったリアルタイム状態同期\n• Android初心者チームメンバーの技術サポート\n\n⚡ 技術的工夫・革新性：\n• WebRTC P2P通信：寝坊者のカメラ映像をリアルタイム配信\n• ハードウェア連携：LEGO MINDSTORMS EV3ロボットの遠隔制御\n• マルチデバイス同期：Firebase Firestoreによる状態管理\n• 直感的UI：Jetpack Composeによるモダンなアプリデザイン\n• 通信最適化：Android → PCサーバー → EV3の効率的な制御フロー\n\n🤖 物理的お仕置きシステム：\n• バスタ君（EV3ロボット）：差動駆動による移動＋ハンマー機構\n• 遠隔操作：十字キーでの移動制御とお仕置きボタン\n• 映像確認：WebRTCで対象者の部屋をリアルタイム監視\n• 警告システム：EV3からのビープ音による音声警告\n\n📊 定量的成果：\n• 開発期間：3日間（2025年8月2日〜4日）\n• チーム構成：5名（3年生3名、1年生2名）\n• 賞金：最優秀賞5万円\n• 参加規模：全8チーム中1位\n• 技術評価：ハードウェア・ソフトウェア連携の革新性で最高評価\n\n🌟 特筆すべき成果：\n• Android開発初心者チームでの最優秀賞受賞\n• 3日間という短期間でのハード・ソフト完全統合\n• WebRTC技術を活用した実用的なP2P映像通信システム\n• 学内最大規模のハッカソンでの圧倒的な技術評価\n• 初心者チームを技術的にリードし、全員の成長を実現",
    "technologies": [
      "Android",
      "Kotlin",
      "Jetpack Compose",
      "WebRTC",
      "SkyWay SDK",
      "Firebase Firestore",
      "LEGO MINDSTORMS EV3",
      "P2P映像通信",
      "リアルタイム通信",
      "ハードウェア制御",
      "Material Design 3"
    ],
    "images": [
      "/images/projects/sleep-buster/slide_title.jpg",
      "/images/projects/sleep-buster/main.jpg",
      "/images/projects/sleep-buster/buster_mode_ui.jpg",
      "/images/projects/sleep-buster/buster_mode.jpg"
    ],
    "image": "/images/projects/sleep-buster/main.jpg",
    "github": "https://github.com/Saisei2004/WILDCARD",
    "demo": "#",
    "demoType": "video",
    "videos": ["/media/videos/system_demo.mp4"],
    "audios": [],
    "challenges": [
      "Android開発初心者チームでの3日間集中開発",
      "WebRTC P2P映像通信とロボット制御の完全統合",
      "Firebase Firestoreによるマルチデバイス状態同期",
      "LEGO EV3との効率的な通信プロトコル設計",
      "1年生ペアプログラミングでの技術指導と開発並行"
    ],
    "learned": [
      "WebRTC技術による実用的なP2P映像通信システム開発",
      "ハードウェア・ソフトウェア連携システムの設計・実装",
      "短期集中開発でのプロジェクトマネジメント",
      "初心者チーム技術指導とペアプログラミング手法",
      "ハッカソンでの効果的なプレゼンテーション・デモ技術"
    ],
    "published": true
  },
  {
    "id": 2,
    "title": "MATLABによるEDM楽曲制作",
    "description": "外部音源を一切使用せず、全ての音をプログラムで生成したEDM楽曲「In The City (MATLAB Remix)」",
    "longDescription": "このプロジェクトは、MATLABを使用して80小節のEDM楽曲を完全に自作した音響技術の探究作品です。外部音源を一切使用せず、全ての音をプログラムコードで生成することに挑戦し、音響工学の理論を実践的な創作活動に応用しました。\n\n🎵 作品詳細仕様：\n• 作品名：\"In The City (MATLAB Remix)\"\n• BPM：180（ハイエナジーEDM）\n• 楽曲構成：80小節 (Intro 16小節 → Buildup 16小節 → Drop1 24小節 → Drop2 24小節)\n• 自作音源数：12種類以上を完全自作\n• ジャンル：エレクトロニック・ダンス・ミュージック\n• 再生時間：約3分30秒\n\n🔧 最大の技術的挑戦「ハイハット音の完全再現」：\n特に困難だった自作ハイハット音の再現では、実際のドラムサンプルを録音・解析し、10kHz以上の高周波数帯域に複数のピークを持つ複雑なノイズ構造であることを発見。スペクトル解析により5つの主要周波数成分（2.5kHz, 5.8kHz, 8.2kHz, 12.1kHz, 15.7kHz）を特定し、ベースホワイトノイズ + 5つの独立バンドパスフィルタ音源を個別生成、元音の振幅エンベロープを参考に最適比率（1.0:0.7:0.5:0.3:0.2:0.1）で合成することで、驚くほど自然なハイハット音の再現に成功しました。\n\n🛠️ 自作開発ツール群：\n• wav_waveform.m：音声波形の詳細可視化・スペクトログラム生成\n• wav_add.m：複数音声ファイルの連結・ミキシング機能\n• wav_env.m：ADSR（Attack-Decay-Sustain-Release）エンベロープの精密適用\n• sequencer6.m：ドラム・パーカッション専用シーケンサー\n• sequencer7.m：メロディ・ハーモニー・エフェクト用高度シーケンサー\n• filter_bank.m：マルチバンドフィルタによる音響合成システム\n\n📈 技術的成果・学習効果：\n• 音響工学理論の実践応用：フーリエ解析、デジタルフィルタ設計、音響合成理論\n• MATLABプログラミング技術：配列処理、関数設計、最適化技術\n• 音楽制作技術：楽曲構成理論、ミキシング技術、リズムパターン設計\n• 問題解決能力：複雑な音響現象の分析・再現・最適化\n\n🎯 プロジェクトの意義：\n音の分析・再構築技術を体得し、信号処理による創作活動の可能性を実証。将来の「音楽バリアフリー」技術開発への基盤として、楽器演奏ができない人でもプログラミングで音楽創作ができることを自ら証明しました。\n\n📊 定量的データ：\n• 開発期間：約3ヶ月（設計1ヶ月、実装・調整2ヶ月）\n• コード行数：約2,000行（関数・スクリプト含む）\n• 使用した数学的手法：FFT変換、バンドパスフィルタ、畳み込み、エンベロープ関数\n• ファイルサイズ：約25MB（44.1kHz, 16bit, stereo）",
    "technologies": [
      "MATLAB",
      "音響信号処理",
      "スペクトル解析",
      "デジタル音源開発",
      "ADSRエンベロープ",
      "バンドパスフィルタ",
      "シーケンサ開発",
      "DTM",
      "FFT変換",
      "音響合成",
      "ホワイトノイズ生成",
      "楽曲構成理論"
    ],
    "images": [
      "/images/projects/matlab-edm/waveform.jpg",
      "/images/projects/matlab-edm/spectrum.jpg",
      "/images/projects/matlab-edm/sequencer.jpg"
    ],
    "image": "/images/projects/matlab-edm/main.jpg",
    "github": "https://github.com/Soki0909/matlab-edm",
    "demo": "#",
    "demoType": "audio",
    "videos": [],
    "audios": ["/media/audio/in-the-city-matlab-remix.mp3"],
    "challenges": [
      "複雑なハイハット音の周波数解析と再構築",
      "10種類以上の楽器音源の完全自作",
      "80小節の楽曲構成設計と実装",
      "リアルタイム再生に対応したMATLABコードの最適化",
      "音響理論を実践的な創作活動に応用"
    ],
    "learned": [
      "音響信号処理の実践的技術",
      "スペクトル解析による音の分解・再構築手法",
      "MATLABによる高度な数値計算とプログラミング",
      "デジタル音源開発の基礎理論",
      "創作活動における技術と芸術の融合"
    ],
    "published": false
  },
  {
    "id": 3,
    "title": "AI体験ブース - 教育イベント企画運営",
    "description": "小学生向け科学実験教室で「複雑な技術を誰もが楽しめる体験に変える」企画を実現",
    "longDescription": "このプロジェクトは、大学祭での小学生向け科学実験教室において、AI技術を体験型学習に「翻訳」した教育イベントです。約50名の小学生を対象に、AIの仕組みを楽しみながら理解できる体験を設計・運営しました。\n\n🎯 企画コンセプト：\n「複雑な技術を誰もが楽しめる体験に変える」\n\nAIの仕組みをそのまま説明しても、子供たちは「難しい」と感じて退屈してしまう。どうすれば複雑な技術を、誰もが夢中になれる体験に変えられるか？という課題に取り組みました。\n\n🔧 解決アプローチ - 技術の「翻訳」による体験設計：\n• ツール：Teachable Machine（専門知識不要のAI学習プラットフォーム）\n• 体験設計：「自分だけのAIとじゃんけんをする」ゲーム体験\n• 学習プロセス：\n  1. 子供たちが自分のグー・チョキ・パーをAIに教え込む\n  2. AIが学習した内容でじゃんけん対戦\n  3. 遊びながらAIがデータから学ぶ仕組みを体感\n\n🎓 教育効果の設計：\n• 体験的理解：「AIはデータから学ぶ」概念を実感\n• 能動的参加：自分でAIを育てる主体性\n• 楽しさの重視：学習を意識させない自然な習得\n\n🎉 成果・インパクト：\n• 大好評：当日最も人気のブースとなる\n• 教育効果：難しい技術でも伝え方を変えることで、誰でも楽しめる体験に変えられることを実証\n• スキル向上：複雑な概念をシンプルに伝える「翻訳力」を獲得\n• 確信獲得：技術の力で人の「できない」を「できる」に変えられるという実感\n\n💡 学んだ哲学：\n「技術は、そのままだと一部の人にしか届かないかもしれない。でも、それを誰もが使える体験に『翻訳』することで、より多くの人の『できない』を『できる』に変えることができる。」",
    "technologies": [
      "Teachable Machine",
      "体験設計",
      "教育技術",
      "イベント企画",
      "プレゼンテーション",
      "インタラクティブ学習",
      "AI教育",
      "コミュニケーション"
    ],
    "images": [
      "/images/projects/ai-booth/kids-learning.jpg",
      "/images/projects/ai-booth/teachable-machine.jpg",
      "/images/projects/ai-booth/event-scene.jpg"
    ],
    "image": "/images/projects/ai-booth/main.jpg",
    "github": "#",
    "demo": "#",
    "demoType": "interactive",
    "videos": ["/media/videos/ai-booth-demo.mp4"],
    "audios": [],
    "challenges": [
      "複雑なAI技術を小学生が理解できる体験に変換",
      "約50名の子供たちを同時に惹きつける企画設計",
      "技術説明と体験のバランス調整",
      "限られた時間での効果的な学習体験の提供",
      "ブースリーダーとしてのイベント運営管理"
    ],
    "learned": [
      "複雑な概念をシンプルに伝える「翻訳力」",
      "体験型学習の設計手法",
      "子供向け教育におけるインタラクティブ手法",
      "技術と教育を融合させるアプローチ",
      "イベント企画・運営のマネジメント能力"
    ],
    "published": true
  },
  {
    "id": 4,
    "title": "Chrome拡張機能 - 学習効率化ツール",
    "description": "「マウス不要の操作」コンセプトを実現する学生ポータルサイト用効率化ツール",
    "longDescription": "このChrome拡張機能は、「マウス不要の操作」というコンセプトのもと、学生ポータルサイトでキーボード操作のみで目的のシラバスにアクセス可能にする効率化ツールです。\n\n🎯 開発背景：\n日常的な学習作業において、マウスとキーボードを行き来する非効率性に着目。特に学生ポータルサイトでのシラバス検索は、複数のクリック操作と画面遷移が必要で、毎日の作業として非常にストレスフルでした。\n\n⚡ 機能概要：\n• キーボードショートカットによる高速ナビゲーション\n• 学生ポータルサイトへの直接的なシラバスアクセス\n• マウス操作を完全に排除した効率的なワークフロー\n• 直感的なキーコマンド設計\n\n🔧 技術実装：\n• JavaScript：DOM操作、イベントハンドリング\n• Chrome Extension API：ページ内スクリプト注入\n• UI/UX：直感的なキーボードショートカット設計\n• パフォーマンス最適化：軽量かつ高速な動作\n\n📈 効果：\n• 日常的な学習作業を大幅に効率化\n• 反復作業のストレス軽減を実現\n• マウス操作からの完全解放\n• 作業時間の短縮とフロー状態の維持\n\n🎨 設計哲学：\n現状の非効率を問題として捉え、技術で解決する過程自体を楽しむアプローチ。小さな改善の積み重ねが、大きな生産性向上につながることを実証しました。",
    "technologies": [
      "JavaScript",
      "Chrome Extension API",
      "DOM操作",
      "イベントハンドリング",
      "キーボードショートカット",
      "UI/UXデザイン",
      "効率化設計",
      "ブラウザAPI"
    ],
    "images": [
      "/images/projects/chrome-extension/keyboard-navigation.jpg",
      "/images/projects/chrome-extension/portal-integration.jpg",
      "/images/projects/chrome-extension/workflow.jpg"
    ],
    "image": "/images/projects/chrome-extension/main.jpg",
    "github": "https://github.com/Soki0909/student-portal-navigator",
    "demo": "#",
    "demoType": "interactive",
    "videos": ["/media/videos/chrome-extension-demo.mp4"],
    "audios": [],
    "challenges": [
      "学生ポータルサイトの複雑なDOM構造への対応",
      "キーボード操作のみでの直感的なナビゲーション設計",
      "ブラウザセキュリティ制約下でのスクリプト注入",
      "異なるページ構造に対応する汎用性の確保",
      "軽量で高速な動作を実現するパフォーマンス最適化"
    ],
    "learned": [
      "Chrome Extension開発の基礎から応用まで",
      "ブラウザAPIの効果的な活用方法",
      "ユーザビリティを重視した設計思考",
      "既存システムの改善点を見つける分析力",
      "小さな改善が生む大きなインパクトの実感"
    ],
    "published": true
  },
  {
    "id": 5,
    "title": "久米蒼輝のポートフォリオサイト",
    "description": "React + TypeScript + Tailwind CSSで構築したレスポンシブなポートフォリオサイト",
    "longDescription": "このポートフォリオサイトは、モダンなWeb技術を使用して構築された、レスポンシブで高性能なシングルページアプリケーションです。自身の技術力と学習意欲、制作実績、そして人柄を採用担当者に効果的に伝えることを目的としています。\n\n🎨 設計コンセプト：\n• シンプル＆モダン：情報を分かりやすく伝え、洗練された印象を与えるデザイン\n• Show, don't tell：実績やコードで技術力を示す\n• 高速表示：ストレスのないUXを提供\n• 保守性重視：長期的な運用とアップデートに対応可能な設計\n\n🏗️ アーキテクチャ設計：\nClean Architectureとreactのベストプラクティスを組み合わせた、5層のレイヤード・アーキテクチャを採用：\n• contexts/：グローバル状態管理層\n• pages/：プレゼンテーション層\n• components/：UIコンポーネント層\n• hooks/：ビジネスロジック層\n• utils/：ユーティリティ層\n\n⚡ 主な特徴：\n• React 19とTypeScriptによる型安全な開発\n• Tailwind CSS v4による効率的なスタイリング\n• Viteによる高速な開発体験\n• React Routerによるクライアントサイドルーティング\n• ESLintとPrettierによるコード品質の担保\n• GitHub Actions CI/CDによる自動デプロイ\n• Google Analytics 4によるアクセス解析\n\n📊 パフォーマンス戦略：\n• Code Splitting戦略によるページレベル分割\n• Lazy Loadingによる画像最適化\n• React.memoとuseCallbackによる最適化\n• Core Web Vitals基準の達成\n\n🔒 品質保証：\n• TypeScript厳密設定による型安全性\n• ESLint + Prettierによるコード品質管理\n• 自動テストとビルド検証\n• レスポンシブデザイン対応\n\nこのプロジェクトを通じて、モダンなフロントエンド開発のワークフローと、パフォーマンスを重視したWebアプリケーションの構築方法を習得しました。",
    "technologies": [
      "React",
      "TypeScript",
      "Tailwind CSS",
      "Vite",
      "React Router",
      "ESLint",
      "Prettier",
      "GitHub Actions",
      "Google Analytics"
    ],
    "images": [
      "/images/projects/portfolio/home-page.jpg",
      "/images/projects/portfolio/about-page.jpg",
      "/images/projects/portfolio/works-page.jpg"
    ],
    "image": "/images/projects/portfolio/main.jpg",
    "github": "https://github.com/Soki0909/Soki0909.github.io",
    "demo": "https://soki0909.github.io/",
    "demoType": "external",
    "videos": [],
    "audios": [],
    "challenges": [
      "Tailwind CSS v4の新しい設定方法への対応",
      "TypeScriptとReact 19の最新機能の活用",
      "レスポンシブデザインの実装",
      "パフォーマンス最適化とCore Web Vitals達成",
      "Clean Architectureに基づく保守性の高い設計"
    ],
    "learned": [
      "モダンなReact開発パターン",
      "Tailwind CSSによる効率的なスタイリング",
      "Viteによる高速な開発環境の構築",
      "TypeScriptによる型安全な開発手法",
      "CI/CD パイプラインの構築と運用"
    ],
    "published": true
  },
  {
    "id": 6,
    "title": "3D電子ピアノアプリケーション",
    "description": "OpenGL/GLUTとリアルタイム音響合成技術を組み合わせたインタラクティブな仮想電子ピアノ",
    "longDescription": "この3D電子ピアノアプリケーションは、コンピュータグラフィックス技術とデジタル音響処理技術を融合させた学術作品です。C言語とOpenGL/GLUTを使用して3D空間に仮想ピアノを構築し、リアルタイム音響合成によって自然な演奏体験を実現しました。\n\n🎹 作品概要：\n• 学術プロジェクト：金沢工業大学「コンピュータグラフィックス」科目作品\n• 開発言語：C言語（OpenGL/GLUT）\n• 音響技術：miniaudioライブラリ + プロシージャルオーディオ\n• 3Dモデル：Blender製高品質モデル（ピアノ本体・鍵盤・操作ボタン）\n\n🔧 技術的特徴「プロシージャルオーディオシステム」：\n外部音源ファイルを一切使用せず、プログラムがリアルタイムで音の波形を計算・生成する革新的なアプローチを採用。加算合成による音色生成では、複数のサイン波を組み合わせて豊かな音色を表現し、ADSRエンベロープにより自然な音の立ち上がりと減衰を実現しました。\n\n🎵 多彩な音色システム：\n• Piano：クラシックなピアノ音色\n• Synth Square：シンセサイザー矩形波\n• Synth Sawtooth：シンセサイザー鋸歯状波\n• Vocal Sound：人声風の特殊音色\n各音色は独自のテキストファイルフォーマットで倍音構成を定義し、プログラム再コンパイル不要でカスタマイズ可能。\n\n🖼️ 高品質3Dグラフィックス：\n• Blender製3Dモデル：ピアノ本体、白鍵（52鍵）、黒鍵（36鍵）、操作ボタン\n• リアルタイムアニメーション：鍵盤押下に連動したスムーズな沈み込み動作\n• マルチライトシステム：メインライトとリムライトによる立体的な陰影表現\n• テクスチャマッピング：床面への木目調テクスチャ適用\n• FPS風カメラシステム：マウス+キーボードによる自由な視点移動\n\n🎮 インタラクティブ操作システム：\n• 直感的演奏：レティクル（十字照準）による鍵盤選択とクリック演奏\n• リアルタイム設定変更：音色・オクターブボタンによる即座の音響設定変更\n• 自動演奏機能：独自楽譜フォーマットによる「きらきら星」シーケンス再生\n• 右クリックメニュー：自動演奏開始・停止のコンテキストメニュー\n\n📊 データ駆動型設計：\n• 独自音色フォーマット：テキストファイルによる倍音構成の外部定義\n• 独自楽譜フォーマット：音名・音価記法による自動演奏データ\n• モジュラー設計：音響エンジン、グラフィックスエンジン、入力システムの分離\n• 拡張性：新しい音色・楽譜の追加が容易な設計\n\n🏗️ システムアーキテクチャ：\n• リアルタイム描画：60FPS安定動作のOpenGL描画パイプライン\n• 非同期音響処理：グラフィックスと独立した音声合成スレッド\n• メモリ効率：動的メモリ管理による最適化\n• クロスプラットフォーム設計：Windows環境での動作最適化\n\n🎯 学習成果・技術実証：\n• 3Dグラフィックスプログラミング：OpenGL/GLUTによる立体描画技術\n• リアルタイム音響合成：デジタル信号処理とオーディオプログラミング\n• ユーザーインターフェース設計：直感的な3D空間操作システム\n• データフォーマット設計：拡張性を重視した外部データ管理\n• 統合システム開発：グラフィックス・音響・入力の総合的な連携\n\n📈 技術的成果：\n• 開発期間：約2ヶ月（設計・実装・最適化含む）\n• コード行数：約1,500行（C言語）\n• 3Dモデル数：100以上のオブジェクト（鍵盤・ボタン・本体構造）\n• 音色数：4種類 + 無限拡張可能な外部定義システム\n• 演奏可能音域：7オクターブ（C1〜C8）+ オクターブシフト機能\n\n🌟 特筆すべき技術革新：\n• プロシージャルオーディオによる完全なリアルタイム音響合成\n• 3D空間での自然な楽器操作体験の実現\n• データ駆動型設計による高い拡張性とカスタマイズ性\n• 学術課題としての総合的な技術統合力の実証\n• 将来の音楽バリアフリー技術への基盤技術としての可能性",
    "technologies": [
      "C言語",
      "OpenGL",
      "GLUT",
      "3Dグラフィックス",
      "miniaudio",
      "プロシージャルオーディオ",
      "リアルタイム音響合成",
      "加算合成",
      "ADSRエンベロープ",
      "Blender",
      "3Dモデリング",
      "テクスチャマッピング",
      "デジタル信号処理",
      "Visual Studio"
    ],
    "images": [
      "/images/projects/piano-app/piano_overview.png",
      "/images/projects/piano-app/manual_play.png",
      "/images/projects/piano-app/timbre_change_before.png",
      "/images/projects/piano-app/timbre_change_after.png",
      "/images/projects/piano-app/octave_change.png",
      "/images/projects/piano-app/auto_play_menu.png",
      "/images/projects/piano-app/auto_play_active.png"
    ],
    "image": "/images/projects/piano-app/piano_overview.png",
    "github": "https://github.com/Soki0909/PianoApp",
    "demo": "#",
    "demoType": "video",
    "videos": ["/media/videos/piano-app-demo.mp4"],
    "audios": ["/media/audios/piano-demo-sound.mp3"],
    "challenges": [
      "リアルタイム音響合成による自然な音色生成の実現",
      "OpenGL/GLUTでの複雑な3Dモデル描画とアニメーション",
      "88鍵ピアノの正確な配置と当たり判定システム",
      "プロシージャルオーディオとグラフィックスの同期処理",
      "データ駆動型設計による拡張性の高いシステム構築"
    ],
    "learned": [
      "3Dグラフィックスプログラミングの基礎から応用まで",
      "リアルタイム音響合成とデジタル信号処理技術",
      "C言語による大規模システム開発手法",
      "Blenderを使った3Dモデル制作とOpenGL連携",
      "ユーザーインターフェースとインタラクション設計"
    ],
    "published": true
  }
]
